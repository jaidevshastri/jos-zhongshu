--- user/sh.c	2008-05-11 15:42:51.000000000 +0800
+++ /home/guzhongshu/Temp/gqlu/jos/user/sh.c	2008-05-03 17:14:31.000000000 +0800
@@ -54,17 +54,19 @@
 			// If not, dup 'fd' onto file descriptor 0,
 			// then close the original 'fd'.
 			
-			// LAB 5: Your code here.
-			if((fd = open(t,O_RDONLY)) < 0)
-			{
-				cprintf("can not open %s\n",t);
+			if ((fd = open(t, O_RDONLY)) < 0) {
+				cprintf("file not found: %s\n", t);
+				exit();
+			}
+			if (fd == 0) {
+				cprintf("file descriptor is zero.\n");
+				exit();
+			}
+			if ((r = dup(fd, 0)) < 0) {
+				cprintf("dup error: %e\n", r);
 				exit();
 			}
-			if(fd != 0)
-				dup(fd, 0);
 			close(fd);
-
-			//panic("< redirection not implemented");
 			break;
 			
 		case '>':	// Output redirection
@@ -81,17 +83,19 @@
 			// If not, dup 'fd' onto file descriptor 1,
 			// then close the original 'fd'.
 			
-			// LAB 5: Your code here.
-			//cprintf("t:%s\n",t);
-			if((fd = open(t, O_WRONLY)) < 0)
-			{
-				cprintf("can not write into %s\n",t);
+			if ((fd = open(t, O_WRONLY)) < 0) {
+				cprintf("file not found: %s\n", t);
+				exit();
+			}
+			if (fd == 1) {
+				cprintf("file descriptor is one.\n");
+				exit();
+			}
+			if ((r = dup(fd, 1)) < 0) {
+				cprintf("dup error: %e\n", r);
 				exit();
 			}
-			if(fd != 1)
-		    		dup(fd, 1);
 			close(fd);
-			//panic("> redirection not implemented");
 			break;
 			
 		case '|':	// Pipe
@@ -118,33 +122,35 @@
 			//	Then 'goto runit', to execute this piece of
 			//	the pipeline.
 
-			// LAB 5: Your code here.
-			if(pipe(p) < 0)
-			{
-				cprintf("failt to open pipe\n");
+			if ((r = pipe(p)) < 0) {
+				cprintf("pipe creation error.\n");
 				exit();
 			}
-			if((pipe_child = fork()) < 0)
-			{
-				cprintf("fork pipe child failed\n");
+			if ((pipe_child = fork()) < 0) {
+				cprintf("fork error.\n");
 				exit();
 			}
-			if(pipe_child == 0)
-			{
-				dup(p[0], 0);
+			if (pipe_child == 0) {
+				// child
+				if ((r = dup(p[0], 0)) < 0) {
+					cprintf("pipe child dup error.\n");
+					exit();
+				}
 				close(p[0]);
 				close(p[1]);
+
 				goto again;
-			}
-			else
-			{
-				dup(p[1],1);
-				close(p[1]);
+			} else {
+				// parent
+				if ((r = dup(p[1], 1)) < 0) {
+					cprintf("pipe parent dup error.\n");
+					exit();
+				}
 				close(p[0]);
+				close(p[1]);
+
 				goto runit;
 			}
-
-			//panic("| not implemented");
 			break;
 
 		case 0:		// String is complete
@@ -351,12 +357,11 @@
 		if ((r = fork()) < 0)
 			panic("fork: %e", r);
 		if (debug)
-			cprintf("FORK: %0d\n", r);
+			cprintf("FORK: %d\n", r);
 		if (r == 0) {
 			runcmd(buf);
 			exit();
 		} else
-			//cprintf("wait\n");
 			wait(r);
 	}
 }
